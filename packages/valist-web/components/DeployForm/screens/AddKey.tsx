import { Button, Text, TextInput, Title } from "@mantine/core";
import { randomBytes } from "crypto";
import { ethers } from "ethers";
import { useEffect, useState } from "react";

interface AddKeyProps {
  account: string;
  project: string;
  repo: string;
  back: () => void;
}

export function AddKey(props: AddKeyProps):JSX.Element {
  const [publicKey, setPublicKey] = useState<string>('');

  const createKeyPair = async () => {
    const signer_key = randomBytes(32).toString('hex');
    const wallet = new ethers.Wallet(signer_key);
    setPublicKey(wallet?.address);
  };

  useEffect(() => {createKeyPair();}, []);

  return (
    <section>
      <Text style={{ marginBottom: 10 }}>GitHub needs a developer keypair with access to your Valist Project to continue.</Text>

      <br/>
      <Title order={4}>A new Ethereum key has been securely generated by your browser:</Title>
      <br />
      <div>
        <TextInput
          disabled
          value={publicKey} 
        />

        <br />
        <Text>1. The new <b>public key address</b> will be added to the <b>{props.account}/{props.project}</b> Valist project.</Text>
        <Text>2. The new <b>private key</b> will be added to the <b>{props.repo}</b> GitHub repo as a secret named <b>VALIST_SIGNER</b>.</Text>
        <br />

        <Button color="violet" onClick={(() => {})}>Add Key</Button>
        <Button style={{ marginLeft: 20 }} color="violet" onClick={props.back}>Choose a different repo</Button>
      </div>
    </section>
  );
}